library ieee;
Use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity ModnCounter is 
GENERIC(N: integer := 4);
port (
Q: out std_logic_vector(N-1 downto 0); 
enable : in std_logic; 
clk: in std_logic;
reset: in std_logic); 
end ModnCounter;

architecture countern_arch of ModnCounter is 
signal count: std_logic_vector (N-1 downto 0); 
signal clkout: std_logic;
signal ctr: integer range 0 to 49999999:= 0; 

begin
process(clk, reset)
begin
if (reset ='1') then
clkout <= '0';
ctr <= 0;
elsif (clk'event and clk ='1') then 
if(ctr= 49999999) then 
clkout <= not clkout;
ctr <= 0 ;
else

ctr <= ctr + 1;
end if; 
end if;
end process; 

process(clkout, reset)
begin
if (reset='1') then
count <= (others => '0'); 
elsif (clkout = '1' and clkout 'EVENT) then

if (enable= '1') then
count <= count + '1' ; 
end if;

end if;
Q <= count;
end process;
end countern_arch;

